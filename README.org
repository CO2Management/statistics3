* Statistics3 -- Statistical Distributions for Ruby
  I forked Shin-ichiro's statistics2 (sinara@blade.nagaokaut.ac.jp), work, because
  it is in serious need of modernization for the latest Ruby, and I am 
  currently depending on this library for my RubyNEAT work.

  For more information (although these links may be out-of-date):
  . http://www.matsusaka-u.ac.jp/~okumura/algo/
  . http://www5.airnet.ne.jp/tomy/cpro/sslib11.htm

** REQUIREMENTS
   Ruby 2.2.2 or higher

** Installation
   #+begin_src bash
   gem install statistics3
   #+end_src

** Documentation
   Note that I've just modernized this fork, and will attempt 
   to add more documentation as time permits.

*** List of all available functions
- binX_(n, p, x)
- bin_x(n, p, x)
- bindens(n, p, x)
- bindist(n, p, x)
- chi2X_(n, x)
- chi2_x(n, x)
- chi2dens(n, x)
- chi2dist(n, x)
- combi(n, x)
- fX_(n1, n2, x)
- f_x(n1, n2, x)
- fdist(n1, n2, f)
- gamma(x)
- loggamma(x)
- newton_a(y, ini, epsilon = 1.0e-6, limit = 30)
- normal__X_(z)
- normal___x(z)
- normaldist(z)
- normalxXX_(z)
- normalx__x(z)
- p_nor(z)
- p_t(df, t)
- pchi2(n, y)
- pchi2X_(n, y)
- pchi2_x(n, y)
- pchi2dist(n, y)
- perm(n, x = n)
- pf(q, n1, n2)
- pfX_(n1, n2, x)
- pf_x(n1, n2, x)
- pfdist(n1, n2, y)
- pfsub(x, y, z)
- pnorm(qn)
- pnormal__X_(y)
- pnormal___x(y)
- pnormaldist(y)
- pnormalxXX_(z)
- pnormalx__x(y)
- poissonX_(m, x)
- poisson_x(m, x)
- poissondens(m, x)
- poissondist(m, x)
- pt(q, n)
- pt__X_(n, y)
- pt___x(n, y)
- ptdist(n, y)
- ptsub(q, n)
- ptxXX_(n, y)
- ptx__x(n, y)
- q_chi2(df, chi2)
- q_f(df1, df2, f)
- t__X_(n, x)
- t___x(n, x)
- tdist(n, t)
- txXX_(n, x)
- tx__x(n, x)
    
*** Normal Distribution
    Returns the integral of normal distribution over (-Infty, x].
    def normalxXX_(z)
  
    Returns the integral of normal distribution over [0, x].
    def normal__X_(z)
  
    Returns the integral of normal distribution over [x, Infty).
    def normal___x(z)
  
    Returns the integral of normal distribution over (-Infty, -x] + [x, Infty).
    def normalx__x(z)
  
**** inverse of normal-distribution
  
    Return the P-value of the corresponding integral.
    def pnormalxXX_(z)
  
    Return the P-value of the corresponding integral.
    def pnormal__X_(y)
  
    Return the P-value of the corresponding integral.
    def pnormal___x(y)
  
    Return the P-value of the corresponding integral.
    def pnormalx__x(y)
  
**** chi2-distribution
  
    Returns the integral of Chi-squared distribution with n degrees of freedom over [x, Infty).
    def chi2_x(n, x)
  
    Returns the integral of Chi-squared distribution with n degrees of freedom over [0, x].
    def chi2X_(n, x)
  
**** inverse of chi2-distribution
  
    Return the P-value of the corresponding integral.
    def pchi2_x(n, y)
  
    Return the P-value of the corresponding integral.
    def pchi2X_(n, y)
  
**** t-distribution
  
    Returns the integral of normal distribution with n degrees of freedom over (-Infty, -x] + [x, Infty).
    def tx__x(n, x)
  
    Returns the integral of t-distribution with n degrees of freedom over (-Infty, x].
    def txXX_(n, x)
  
    Returns the integral of t-distribution with n degrees of freedom over [0, x].
    def t__X_(n, x)
  
    Returns the integral of t-distribution with n degrees of freedom over [x, Infty).
    def t___x(n, x)
  
**** inverse of t-distribution
  
    Return the P-value of the corresponding integral.
    def ptx__x(n, y)
  
    Return the P-value of the corresponding integral.
    def ptxXX_(n, y)
  
    Return the P-value of the corresponding integral.
    def pt__X_(n, y)
  
    Return the P-value of the corresponding integral.
    def pt___x(n, y)
  
**** F-distribution
  
    Returns the integral of F-distribution with n1 and n2 degrees of freedom over [x, Infty).
    def f_x(n1, n2, x)
  
    Returns the integral of F-distribution with n1 and n2 degrees of freedom over [0, x].
    def fX_(n1, n2, x)
  
  
**** inverse of F-distribution
  
    Return the P-value of the corresponding integral.
    def pf_x(n1, n2, x)
  
    Return the P-value of the corresponding integral.
    def pfX_(n1, n2, x)
  
    discrete distributions
    def binX_(n, p, x)
    def bin_x(n, p, x)
  
    def poissonX_(m, x)
    def poisson_x(m, x)

** Usage
*** Example:
    #+begin_src ruby
    require "statistics3"
    puts Statistics3.normaldist(0.27) #=> 0.60641987319804
    #+end_src

** If you don't want to use the C extension:
    #+begin_src ruby
    require "statistics3/no_ext"
    puts Statistics3.normaldist(0.27) #=> 0.606419873198039 (delta of 9.99200722162641e-16)
    #+end_src

** LICENSE:
   MIT


